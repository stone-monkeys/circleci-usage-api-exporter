version: 2.1

parameters:
  org_id:
    type: string
    default: ${CIRCLE_ORGANIZATION_ID}

jobs:
  generate-usage-report:
    docker:
      - image: cimg/python:3.13.1
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
      - run:
          environment:
            START_DATE: "2025-03-01"
            END_DATE: "2025-04-01"
            ORG_ID: << pipeline.parameters.org_id >>
          name: Get Usage Report
          command: |
            ORG_ID="$(echo "${ORG_ID}" | circleci env subst)"
            python ./src/get_usage_report.py
      - run:
          name: Merge multiple csv files together and do some sorting 
          command: |
            python ./src/merge.py
      - run:
          name: Create a graph from the merged data 
          command: |
            python ./src/create_graph.py
      - persist_to_workspace:
          root: /tmp/reports
          paths:
            - merged.csv
      - store_artifacts:
          path: /tmp/reports
  send-metrics-to-datadog:
    docker:
      - image: cimg/python:3.13.1
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
      - run:
          name: Send metrics to Datadog
          command: |
            python ./src/send_to_datadog.py /tmp/merged.csv

  send-metrics-to-doit:
    docker:
      - image: cimg/python:3.13.1
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
      - run:
          name: Send metrics to DoiT
          command: |
            python ./src/send_to_doit.py /tmp/merged.csv

workflows:
  use-usage-api:
    jobs:
      - generate-usage-report:
          context:
            - my-context
      - send-metrics-to-doit:
          requires:
            - generate-usage-report
          context:
            - my-context